(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[63916],{80263:(e,t,n)=>{"use strict";n.d(t,{A:()=>d});var a=n(74892),i=n(20177),l=n(95412),r=n(93884),o=n(4107);const d=function(){var e=(0,r.A)({componentName:"Title",props:{type:{value:"screen",defaultValue:"screen",options:{screen:"screen",section:"section",card:"card"},type:o.B.Enum,description:""},title:{value:"Title",type:o.B.String,description:"Represents the text that will be displayed on the button."},description:{value:void 0,type:o.B.String,description:"Represents the text that will be displayed on the button."},size:{value:"large",defaultValue:"large",options:{large:"large",small:"small"},type:o.B.Enum,description:"Defines the size of the button."},icon:{value:void 0,type:o.B.String,description:"Specifies the name of the icon that should be placed on the left side of the button."},titleFlex:{value:!0,type:o.B.Boolean,description:"If true, the button will take the full width of its container."},actionTitle:{value:void 0,type:o.B.String,description:"Specifies the name of the icon that should be placed on the left side of the button."},showAction:{value:!0,type:o.B.Boolean,description:"If true, the button will take the full width of its container."},onPressAction:{value:"() => {}",type:o.B.Function,description:"A callback function that is called when the button is pressed."}},scope:{Title:i.hE},imports:{"@momo-kits/foundation":{named:["Title"]}}});return a.createElement(a.Fragment,null,a.createElement(l.A,{params:e}))}},95412:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var a=n(58168),i=n(74892),l=n(29813),r=n(91906),o=n(76482),d=n(5789),g=n(5641),p=n(10991),m=n(3533);const s=function(e){var t=e.params;return i.createElement(l.A,{fallback:i.createElement(i.Fragment,null,"Loading...")},(function(){return i.createElement("div",null,i.createElement("div",{style:{border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative",paddingLeft:16,paddingRight:16,fontFamily:"SFProText"}},i.createElement(r.A,(0,a.A)({},t.compilerProps,{minHeight:62,placeholder:o.A}))),i.createElement(d.A,{msg:t.errorProps.msg,isPopup:!0}),i.createElement(g.A,t.knobProps),i.createElement(p.A,t.editorProps),i.createElement(d.A,t.errorProps),i.createElement(m.w,t.actions))}))}},86868:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>g,default:()=>c,frontMatter:()=>d,metadata:()=>p,toc:()=>s});var a=n(58168),i=n(98587),l=(n(74892),n(77264)),r=n(80263),o=["components"],d={id:"title",title:"Title"},g=void 0,p={unversionedId:"components/title",id:"components/title",title:"Title",description:"Playground",source:"@site/docs/components/Title.mdx",sourceDirName:"components",slug:"/components/title",permalink:"/docs/next/components/title",draft:!1,editUrl:"https://github.com/docs/components/Title.mdx",tags:[],version:"current",frontMatter:{id:"title",title:"Title"},sidebar:"docs",previous:{title:"Text",permalink:"/docs/next/components/text"},next:{title:"ItemList",permalink:"/docs/next/components/itemlist"}},m={},s=[{value:"Playground",id:"playground",level:2},{value:"Props",id:"props",level:2}],y={toc:s},u="wrapper";function c(e){var t=e.components,n=(0,i.A)(e,o);return(0,l.yg)(u,(0,a.A)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("h2",{id:"playground"},"Playground"),(0,l.yg)(r.A,{mdxType:"Play"}),(0,l.yg)("h2",{id:"props"},"Props"),(0,l.yg)("div",{class:"table-responsive"},(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Name"),(0,l.yg)("th",{parentName:"tr",align:null},"Type"),(0,l.yg)("th",{parentName:"tr",align:null},"Default"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"badgeLabel")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"badgeLabel"),": A string for the badge label, useful for displaying status or count information.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"buttonSize")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"small")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"large")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"small")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"buttonSize"),": Defines the size of the button within the component.Options are 'small' and 'large'.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"buttonTitle")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"buttonTitle"),": A string for the button title, used for action buttons within the component.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"description")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"description"),": A string that provides additional information or context about the component's content or purpose.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"icon")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"icon"),": Allows for the inclusion of an icon to visually represent the content or function of the component.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"iconAlign")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"top")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"bottom")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"middle")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"top")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"iconAlign"),": Dictates the vertical alignment of the icon within the component.It can be 'top', 'middle', or 'bottom'.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"iconColor")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"null")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"iconColor"),": Customizes the color of the icon, enabling visual consistency with the application's theme or to emphasize importance.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"onPressRightAction")),(0,l.yg)("td",{parentName:"tr",align:null},"(() => void)"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"Function")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"onPressRightAction"),": Function to handle the event when the right action button or icon is pressed.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"showRightAction")),(0,l.yg)("td",{parentName:"tr",align:null},"boolean"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"false")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"showRightAction"),": Boolean flag to show or hide a right-aligned action button or icon.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"showTrailingAction")),(0,l.yg)("td",{parentName:"tr",align:null},"boolean"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"false")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"showTrailingAction"),": Boolean flag to show or hide a trailing action button or icon.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"size")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"small")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"large")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"medium")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"medium")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"size"),": Adjusts the size of the component.Options include 'small', 'medium', and 'large'.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"textOnly")),(0,l.yg)("td",{parentName:"tr",align:null},"boolean"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"false")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"textOnly"),": Boolean flag to render the component as text only without additional icons or actions.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"title")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"Title")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"title"),": A string that represents the main heading or name of the component,essential for providing context or summarizing the content within.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"type")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"card")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"section")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"section")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"type"),": Defines the overall layout of the component.It can be either 'card' for a more contained and bordered look,or 'section' for a more open and seamless integration into the UI."))))))}c.isMDXComponent=!0},52352:()=>{},18411:()=>{}}]);