(self.webpackChunkmomo_kits_website=self.webpackChunkmomo_kits_website||[]).push([[65673],{96155:(e,t,n)=>{"use strict";n.d(t,{A:()=>p});var a=n(74892),l=n(16943),r=n(95412),i=n(93884),o=n(4107);const p=function(){var e=(0,i.A)({componentName:"Input",props:{size:{value:"small",type:o.B.Enum,options:{small:"small",large:"large"},description:"Optional. Defines the size of the Input component."},placeholder:{value:"placeholder",type:o.B.String,description:"Optional. Represents the placeholder in the Input component."},floatingValue:{value:void 0,type:o.B.String,description:"Optional. Represents the value for the floating title in the Input component."},floatingIcon:{value:void 0,type:o.B.String,description:"Optional. Represents the name or key of the floating icon to be displayed in the Input component."},errorMessage:{value:void 0,type:o.B.String,description:"Optional. Represents the error message to be displayed below the Input component when there is an error."},icon:{value:void 0,type:o.B.String,description:"Optional. Represents the name or key of the icon to be displayed in the Input component."},disabled:{value:!1,type:o.B.Boolean,description:"Optional. If `true`, the user won't be able to interact with the Input component. Defaults to `false` if not provided."},floatingIconColor:{value:void 0,type:o.B.String,description:"Optional. Represents the color of the floating icon in the Input component."},iconColor:{value:void 0,type:o.B.String,description:"Optional. Represents the color of the icon in the Input component."},required:{value:!1,type:o.B.Boolean,description:"Optional. If `true`, the Input component is marked as required, indicating that the user must provide a value before submitting a form. Defaults to `false` if not provided."},errorSpacing:{value:!1,type:o.B.Boolean,description:"Optional. If `true`, include spacing when Input does not have an error message. Defaults to `false` if not provided."}},scope:{Input:l.pd},imports:{"@momo-kits/foundation":{named:["Input"]}}});return a.createElement(a.Fragment,null,a.createElement(r.A,{params:e}))}},95412:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var a=n(58168),l=n(74892),r=n(29813),i=n(91906),o=n(76482),p=n(5789),g=n(5641),d=n(10991),m=n(3533);const s=function(e){var t=e.params;return l.createElement(r.A,{fallback:l.createElement(l.Fragment,null,"Loading...")},(function(){return l.createElement("div",null,l.createElement("div",{style:{border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative",paddingLeft:16,paddingRight:16,fontFamily:"SFProText"}},l.createElement(i.A,(0,a.A)({},t.compilerProps,{minHeight:62,placeholder:o.A}))),l.createElement(p.A,{msg:t.errorProps.msg,isPopup:!0}),l.createElement(g.A,t.knobProps),l.createElement(d.A,t.editorProps),l.createElement(p.A,t.errorProps),l.createElement(m.w,t.actions))}))}},46162:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>g,default:()=>N,frontMatter:()=>p,metadata:()=>d,toc:()=>s});var a=n(58168),l=n(98587),r=(n(74892),n(77264)),i=n(96155),o=["components"],p={id:"input",title:"Input"},g=void 0,d={unversionedId:"components/input",id:"version-0.103.2/components/input",title:"Input",description:"Input default component",source:"@site/versioned_docs/version-0.103.2/components/Input.mdx",sourceDirName:"components",slug:"/components/input",permalink:"/docs/0.103.2/components/input",draft:!1,editUrl:"https://github.com/versioned_docs/version-0.103.2/components/Input.mdx",tags:[],version:"0.103.2",frontMatter:{id:"input",title:"Input"},sidebar:"version-0.103.2",previous:{title:"Image",permalink:"/docs/0.103.2/components/image"},next:{title:"InputMoney",permalink:"/docs/0.103.2/components/inputmoney"}},m={},s=[{value:"Playground",id:"playground",level:2},{value:"Props",id:"props",level:2}],u={toc:s},y="wrapper";function N(e){var t=e.components,n=(0,l.A)(e,o);return(0,r.yg)(y,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Input default component"),(0,r.yg)("h2",{id:"playground"},"Playground"),(0,r.yg)(i.A,{mdxType:"Play"}),(0,r.yg)("h2",{id:"props"},"Props"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Includes all ",(0,r.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/textinput#props"},"React Native TextInput"),", ",(0,r.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/view#props"},"View")," props.")),(0,r.yg)("div",{class:"table-responsive"},(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"disabled")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. If ",(0,r.yg)("inlineCode",{parentName:"td"},"true"),", the user won't be able to interact with the Input component.Defaults to ",(0,r.yg)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"errorMessage")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the error message to be displayed below the Input component when there is an error.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"errorSpacing")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. If ",(0,r.yg)("inlineCode",{parentName:"td"},"true"),",include spacing when Input not have error message.Defaults to ",(0,r.yg)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"floatingIcon")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the name or key of the floating icon to be displayed in the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"floatingIconColor")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the color of the floating icon in the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"floatingValue")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the value for the floating title in the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"fontWeight")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Regular")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"td"},"Bold")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Regular")),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the font weight of the text in the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"hintText")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents text below the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"icon")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"iconColor")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"leadingIcon")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the leading icon in the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"leadingIconColor")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the color of the leading icon in the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"loading")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},"If true, the icon of input will use be show indicator loading.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"onPressFloatingIcon")),(0,r.yg)("td",{parentName:"tr",align:null},"((e: GestureResponderEvent) => void)"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"onPressIcon")),(0,r.yg)("td",{parentName:"tr",align:null},"(() => void)"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"onPressTrailing")),(0,r.yg)("td",{parentName:"tr",align:null},"(() => void)"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. callback function to be called when the icon is pressed.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"params")),(0,r.yg)("td",{parentName:"tr",align:null},"any"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. params for element tracking.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"required")),(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. If ",(0,r.yg)("inlineCode",{parentName:"td"},"true"),", the Input component is marked as required,indicating that the user must provide a value before submitting a form.Defaults to ",(0,r.yg)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"size")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"small")," ","|"," ",(0,r.yg)("inlineCode",{parentName:"td"},"large")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"small")),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Defines the size of the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"trailing")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the name or key of the icon to be displayed in the Input component.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"trailingColor")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Optional. Represents the color of the icon in the Input component."))))))}N.isMDXComponent=!0},52352:()=>{},18411:()=>{}}]);