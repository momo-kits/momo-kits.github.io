(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[1567],{86898:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var a=n(51702),l=n(74183),r=n(54236),o=n(62964),i=n(53782);const p=function(){var e=(0,o.Z)({componentName:"CheckBox",props:{value:{value:!1,type:i.n.Boolean,description:"Represents whether the CheckBox is currently checked (`true`) or unchecked (`false`)."},disabled:{value:!1,type:i.n.Boolean,description:"Optional. If `true`, the user won't be able to interact with the CheckBox. Defaults to `false` if not provided."},label:{value:void 0,type:i.n.String,description:"Optional. Represents the text label displayed next to the CheckBox."},onChange:{value:"() => {}",type:i.n.Function,description:"A callback function that is called when the value of the CheckBox changes. Receives the new value of the CheckBox as a parameter."},indeterminate:{value:!1,type:i.n.Boolean,description:'Optional. If `true`, the CheckBox will be in an indeterminate state, which is typically used to represent a "mixed" or "partial" selection state. Defaults to `false` if not provided.'},style:{value:"{}",type:i.n.Object,description:"Optional. Used to apply custom styling to the CheckBox component. Accepts an object of style properties."}},scope:{CheckBox:l.Jg},imports:{"@momo-kits/foundation":{named:["CheckBox"]}}});return a.createElement(a.Fragment,null,a.createElement(r.Z,{params:e}))}},54236:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var a=n(87462),l=n(51702),r=n(91262),o=n(180),i=n(85405),p=n(3389),d=n(84085),s=n(17099),c=n(25757);const m=function(e){var t=e.params;return l.createElement(r.Z,{fallback:l.createElement(l.Fragment,null,"Loading...")},(function(){return l.createElement("div",null,l.createElement("div",{style:{border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative",paddingLeft:16,paddingRight:16,fontFamily:"SFProText"}},l.createElement(o.Z,(0,a.Z)({},t.compilerProps,{minHeight:62,placeholder:i.Z}))),l.createElement(p.Z,{msg:t.errorProps.msg,isPopup:!0}),l.createElement(d.Z,t.knobProps),l.createElement(s.Z,t.editorProps),l.createElement(p.Z,t.errorProps),l.createElement(c.E,t.actions))}))}},8133:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>p,metadata:()=>s,toc:()=>m});var a=n(87462),l=n(63366),r=(n(51702),n(1037)),o=n(86898),i=["components"],p={id:"checkbox",title:"CheckBox"},d=void 0,s={unversionedId:"components/checkbox",id:"components/checkbox",title:"CheckBox",description:"Playground",source:"@site/docs/components/CheckBox.mdx",sourceDirName:"components",slug:"/components/checkbox",permalink:"/docs/next/components/checkbox",draft:!1,editUrl:"https://github.com/docs/components/CheckBox.mdx",tags:[],version:"current",frontMatter:{id:"checkbox",title:"CheckBox"},sidebar:"docs",previous:{title:"Button",permalink:"/docs/next/components/button"},next:{title:"Icon",permalink:"/docs/next/components/icon"}},c={},m=[{value:"Playground",id:"playground",level:2},{value:"Props",id:"props",level:2}],u={toc:m},k="wrapper";function h(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)(k,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"playground"},"Playground"),(0,r.kt)(o.Z,{mdxType:"Play"}),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("div",{class:"table-responsive"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disabled")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the user won't be able to interact with the CheckBox.Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"indeterminate")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),', the CheckBox will be in an indeterminate state,which is typically used to represent a "mixed" or "partial" selection state.Defaults to ',(0,r.kt)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"label")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. Represents the text label displayed next to the CheckBox.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"onChange")),(0,r.kt)("td",{parentName:"tr",align:null},"(value: boolean) => void"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"A callback function that is called when the value of the CheckBox changes.Receives the new value of the CheckBox as a parameter.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"style")),(0,r.kt)("td",{parentName:"tr",align:null},"ViewStyle"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. Used to apply custom styling to the CheckBox component.Accepts an object of style properties.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Represents whether the CheckBox is currently checked (",(0,r.kt)("inlineCode",{parentName:"td"},"true"),") or unchecked (",(0,r.kt)("inlineCode",{parentName:"td"},"false"),")."))))))}h.isMDXComponent=!0},33770:()=>{},72950:()=>{},54882:()=>{}}]);