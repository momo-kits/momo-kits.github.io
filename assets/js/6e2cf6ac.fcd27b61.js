(self.webpackChunkmomo_kits_website=self.webpackChunkmomo_kits_website||[]).push([[50469],{14340:(e,t,o)=>{"use strict";o.d(t,{A:()=>c});var n=o(49397),r=o(96007),a=o(64775),i=o(44319),s=o(70172);const c=function(){var e=(0,i.A)({componentName:"CheckBox",props:{value:{value:!1,type:s.B.Boolean,description:"Represents whether the CheckBox is currently checked (`true`) or unchecked (`false`)."},disabled:{value:!1,type:s.B.Boolean,description:"Optional. If `true`, the user won't be able to interact with the CheckBox. Defaults to `false` if not provided."},label:{value:void 0,type:s.B.String,description:"Optional. Represents the text label displayed next to the CheckBox."},onChange:{value:"() => {}",type:s.B.Function,description:"A callback function that is called when the value of the CheckBox changes. Receives the new value of the CheckBox as a parameter."},indeterminate:{value:!1,type:s.B.Boolean,description:'Optional. If `true`, the CheckBox will be in an indeterminate state, which is typically used to represent a "mixed" or "partial" selection state. Defaults to `false` if not provided.'},style:{value:"{}",type:s.B.Object,description:"Optional. Used to apply custom styling to the CheckBox component. Accepts an object of style properties."}},scope:{CheckBox:r.oV},imports:{"@momo-kits/foundation":{named:["CheckBox"]}}});return n.createElement(n.Fragment,null,n.createElement(a.A,{params:e}))}},64775:(e,t,o)=>{"use strict";o.d(t,{A:()=>m});var n=o(58168),r=o(49397),a=o(78478),i=o(1905),s=o(86183),c=o(19080),l=o(29013),p=o(74177),d=o(25674);const m=function(e){var t=e.params;return r.createElement(a.A,{fallback:r.createElement(r.Fragment,null,"Loading...")},(function(){return r.createElement("div",null,r.createElement("div",{style:{border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative",paddingLeft:16,paddingRight:16,fontFamily:"SFProText"}},r.createElement(i.A,(0,n.A)({},t.compilerProps,{minHeight:62,placeholder:s.A}))),r.createElement(c.A,{msg:t.errorProps.msg,isPopup:!0}),r.createElement(l.A,t.knobProps),r.createElement(p.A,t.editorProps),r.createElement(c.A,t.errorProps),r.createElement(d.w,t.actions))}))}},76472:(e,t,o)=>{"use strict";o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>v,frontMatter:()=>c,metadata:()=>p,toc:()=>m});var n=o(58168),r=o(98587),a=(o(49397),o(77611)),i=o(14340),s=["components"],c={id:"checkbox",title:"CheckBox"},l=void 0,p={unversionedId:"components/checkbox",id:"version-0.110.x/components/checkbox",title:"CheckBox",description:"Playground",source:"@site/versioned_docs/version-0.110.x/components/CheckBox.mdx",sourceDirName:"components",slug:"/components/checkbox",permalink:"/docs/components/checkbox",draft:!1,editUrl:"https://github.com/versioned_docs/version-0.110.x/components/CheckBox.mdx",tags:[],version:"0.110.x",frontMatter:{id:"checkbox",title:"CheckBox"},sidebar:"version-0.110.x",previous:{title:"Button",permalink:"/docs/components/button"},next:{title:"Icon",permalink:"/docs/components/icon"}},d={},m=[{value:"Playground",id:"playground",level:2},{value:"Props",id:"props",level:2}],u={toc:m},h="wrapper";function v(e){var t=e.components,o=(0,r.A)(e,s);return(0,a.yg)(h,(0,n.A)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"playground"},"Playground"),(0,a.yg)(i.A,{mdxType:"Play"}),(0,a.yg)("h2",{id:"props"},"Props"),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"Includes all ",(0,a.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/touchableopacity#props"},"TouchableOpacityProps")," props.")))}v.isMDXComponent=!0},52352:()=>{},18411:()=>{}}]);