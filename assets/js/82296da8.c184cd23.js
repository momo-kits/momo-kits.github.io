"use strict";(self.webpackChunkmomo_kits_website=self.webpackChunkmomo_kits_website||[]).push([[81331],{77611:(n,e,t)=>{t.d(e,{xA:()=>l,yg:()=>v});var r=t(49397);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var p=r.createContext({}),c=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},l=function(n){var e=c(n.components);return r.createElement(p.Provider,{value:e},n.children)},m="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,p=n.parentName,l=s(n,["components","mdxType","originalType","parentName"]),m=c(t),g=o,v=m["".concat(p,".").concat(g)]||m[g]||u[g]||a;return t?r.createElement(v,i(i({ref:e},l),{},{components:t})):r.createElement(v,i({ref:e},l))}));function v(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=g;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=n,s[m]="string"==typeof n?n:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},69434:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>v,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var r=t(58168),o=t(98587),a=(t(49397),t(77611)),i=["components"],s={id:"transition",title:"Navigation Transition",hide_table_of_contents:!0},p="Transition",c={unversionedId:"transition",id:"transition",title:"Navigation Transition",description:"push",source:"@site/docs/navigation_transition.mdx",sourceDirName:".",slug:"/transition",permalink:"/docs/next/transition",draft:!1,editUrl:"https://github.com/docs/navigation_transition.mdx",tags:[],version:"current",frontMatter:{id:"transition",title:"Navigation Transition",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"Theme",permalink:"/docs/next/theme"},next:{title:"Header Right",permalink:"/docs/next/headerRight"}},l={},m=[{value:"push",id:"push",level:3},{value:"present",id:"present",level:3},{value:"replace",id:"replace",level:3},{value:"reset",id:"reset",level:3},{value:"showModal",id:"showmodal",level:3},{value:"showBottomSheet",id:"showbottomsheet",level:3}],u={toc:m},g="wrapper";function v(n){var e=n.components,t=(0,o.A)(n,i);return(0,a.yg)(g,(0,r.A)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"transition"},"Transition"),(0,a.yg)("h3",{id:"push"},"push"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import {useContext} from 'react';\nimport {\n  ApplicationContext,\n  Button,\n  NavigationScreenProps,\n} from '@momo-kits/foundation';\nimport {View} from 'react-native';\nconst Screen: React.FC<NavigationScreenProps> = ({navigation}) => {\n  const {translate, navigator} = useContext(ApplicationContext);\n  return (\n    <Button\n      title={translate?.('push_screen')}\n      onPress={() => {\n        //ScreenParams type\n        navigator?.push({\n          screen: () => <View style={{flex: 1}} />,\n          options: {\n            //NavigationOptions type\n          },\n          params: {},\n        });\n      }}\n    />\n  );\n};\n")),(0,a.yg)("h3",{id:"present"},"present"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import {useContext} from 'react';\nimport {\n  ApplicationContext,\n  Button,\n  NavigationScreenProps,\n} from '@momo-kits/foundation';\nimport {View} from 'react-native';\nconst Screen: React.FC<NavigationScreenProps> = ({navigation}) => {\n  const {translate, navigator} = useContext(ApplicationContext);\n  return (\n    <Button\n      title={translate?.('present_screen')}\n      onPress={() => {\n        //ScreenParams type\n        navigator?.present({\n          screen: () => <View style={{flex: 1}} />,\n          options: {\n            //NavigationOptions type\n          },\n          params: {},\n        });\n      }}\n    />\n  );\n};\n")),(0,a.yg)("h3",{id:"replace"},"replace"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import {\n  ApplicationContext,\n  Button,\n  NavigationScreenProps,\n} from '@momo-kits/foundation';\nimport {useContext} from 'react';\nimport {View} from 'react-native';\nconst Screen: React.FC<NavigationScreenProps> = ({navigation}) => {\n  const {translate, navigator} = useContext(ApplicationContext);\n  return (\n    <Button\n      title={translate?.('replace_screen')}\n      onPress={() => {\n        //ScreenParams type\n        navigator?.replace({\n          screen: () => <View style={{flex: 1}} />,\n          options: {\n            //NavigationOptions type\n          },\n          params: {},\n        });\n      }}\n    />\n  );\n};\n")),(0,a.yg)("h3",{id:"reset"},"reset"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import {\n  ApplicationContext,\n  Button,\n  NavigationScreenProps,\n} from '@momo-kits/foundation';\nimport {useContext} from 'react';\nimport {View} from 'react-native';\nconst Screen: React.FC<NavigationScreenProps> = ({navigation}) => {\n  const {translate, navigator} = useContext(ApplicationContext);\n  return (\n    <Button\n      title={translate?.('reset_screen')}\n      onPress={() => {\n        //ScreenParams type\n        navigator?.reset({\n          screen: () => <View style={{flex: 1}} />,\n          options: {\n            //NavigationOptions type\n          },\n          params: {},\n        });\n      }}\n    />\n  );\n};\n")),(0,a.yg)("h3",{id:"showmodal"},"showModal"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import {\n  ApplicationContext,\n  Button,\n  NavigationScreenProps,\n} from '@momo-kits/foundation';\nimport {useContext} from 'react';\nimport {Alert} from 'react-native';\nconst Screen: React.FC<NavigationScreenProps> = ({navigation}) => {\n  const {translate, navigator} = useContext(ApplicationContext);\n  return (\n    <Button\n      title={translate?.('showmodal')}\n      onPress={() => {\n        //ModalParams type\n        navigator?.showModal({\n          screen: Modal,\n          onDismiss: () => {\n            Alert.alert('onDismiss');\n          },\n          params: {},\n        });\n      }}\n    />\n  );\n};\n")),(0,a.yg)("h3",{id:"showbottomsheet"},"showBottomSheet"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import {Alert} from 'react-native';\nimport {useContext} from 'react';\nimport {\n  ApplicationContext,\n  Button,\n  NavigationScreenProps,\n} from '@momo-kits/foundation';\nconst Screen: React.FC<NavigationScreenProps> = ({navigation}) => {\n  const {translate, navigator} = useContext(ApplicationContext);\n  return (\n    <Button\n      title={translate?.('show_bottomsheet')}\n      onPress={() => {\n        //ModalParams type\n        navigator?.showBottomSheet({\n          screen: BottomSheet,\n          onDismiss: () => {\n            Alert.alert('onDismiss');\n          },\n          params: {},\n        });\n      }}\n    />\n  );\n};\n")))}v.isMDXComponent=!0}}]);