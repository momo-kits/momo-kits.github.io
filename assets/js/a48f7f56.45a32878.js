(self.webpackChunkmomo_kits_website=self.webpackChunkmomo_kits_website||[]).push([[77020],{58979:(e,t,o)=>{"use strict";o.d(t,{A:()=>s});var n=o(74892),r=o(16943),a=o(95412),c=o(93884),i=o(4107);const s=function(){var e=(0,c.A)({componentName:"CheckBox",props:{value:{value:!1,type:i.B.Boolean,description:"Represents whether the CheckBox is currently checked (`true`) or unchecked (`false`)."},disabled:{value:!1,type:i.B.Boolean,description:"Optional. If `true`, the user won't be able to interact with the CheckBox. Defaults to `false` if not provided."},label:{value:void 0,type:i.B.String,description:"Optional. Represents the text label displayed next to the CheckBox."},onChange:{value:"() => {}",type:i.B.Function,description:"A callback function that is called when the value of the CheckBox changes. Receives the new value of the CheckBox as a parameter."},indeterminate:{value:!1,type:i.B.Boolean,description:'Optional. If `true`, the CheckBox will be in an indeterminate state, which is typically used to represent a "mixed" or "partial" selection state. Defaults to `false` if not provided.'},style:{value:"{}",type:i.B.Object,description:"Optional. Used to apply custom styling to the CheckBox component. Accepts an object of style properties."}},scope:{CheckBox:r.oV},imports:{"@momo-kits/foundation":{named:["CheckBox"]}}});return n.createElement(n.Fragment,null,n.createElement(a.A,{params:e}))}},95412:(e,t,o)=>{"use strict";o.d(t,{A:()=>m});var n=o(58168),r=o(74892),a=o(29813),c=o(91906),i=o(76482),s=o(5789),l=o(5641),p=o(10991),d=o(3533);const m=function(e){var t=e.params;return r.createElement(a.A,{fallback:r.createElement(r.Fragment,null,"Loading...")},(function(){return r.createElement("div",null,r.createElement("div",{style:{border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative",paddingLeft:16,paddingRight:16,fontFamily:"SFProText"}},r.createElement(c.A,(0,n.A)({},t.compilerProps,{minHeight:62,placeholder:i.A}))),r.createElement(s.A,{msg:t.errorProps.msg,isPopup:!0}),r.createElement(l.A,t.knobProps),r.createElement(p.A,t.editorProps),r.createElement(s.A,t.errorProps),r.createElement(d.w,t.actions))}))}},93044:(e,t,o)=>{"use strict";o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>v,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var n=o(58168),r=o(98587),a=(o(74892),o(77264)),c=o(58979),i=["components"],s={id:"checkbox",title:"CheckBox"},l=void 0,p={unversionedId:"components/checkbox",id:"version-0.92.6-rc.26/components/checkbox",title:"CheckBox",description:"Playground",source:"@site/versioned_docs/version-0.92.6-rc.26/components/CheckBox.mdx",sourceDirName:"components",slug:"/components/checkbox",permalink:"/docs/0.92.6-rc.26/components/checkbox",draft:!1,editUrl:"https://github.com/versioned_docs/version-0.92.6-rc.26/components/CheckBox.mdx",tags:[],version:"0.92.6-rc.26",frontMatter:{id:"checkbox",title:"CheckBox"},sidebar:"version-0.92.6-rc.26",previous:{title:"Button",permalink:"/docs/0.92.6-rc.26/components/button"},next:{title:"Icon",permalink:"/docs/0.92.6-rc.26/components/icon"}},d={},m=[{value:"Playground",id:"playground",level:2},{value:"Props",id:"props",level:2}],u={toc:m},h="wrapper";function v(e){var t=e.components,o=(0,r.A)(e,i);return(0,a.yg)(h,(0,n.A)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"playground"},"Playground"),(0,a.yg)(c.A,{mdxType:"Play"}),(0,a.yg)("h2",{id:"props"},"Props"),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"Includes all ",(0,a.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/touchableopacity#props"},"TouchableOpacityProps")," props.")))}v.isMDXComponent=!0},52352:()=>{},18411:()=>{}}]);