(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[43857],{17901:(e,t,n)=>{"use strict";n.d(t,{A:()=>d});var a=n(74892),r=n(20177),l=n(95412),o=n(93884),i=n(4107);const d=function(){var e=(0,o.A)({componentName:"Button",props:{type:{value:"primary",defaultValue:"primary",options:{primary:"primary",secondary:"secondary",tonal:"tonal",danger:"danger",outline:"outline",text:"text",disabled:"disabled"},type:i.B.Enum,description:"Defines the visual style of the button."},size:{value:"large",defaultValue:"large",options:{large:"large",medium:"medium",small:"small"},type:i.B.Enum,description:"Defines the size of the button."},full:{value:!0,type:i.B.Boolean,description:"If true, the button will take the full width of its container."},iconRight:{value:void 0,type:i.B.String,description:"Specifies the name of the icon that should be placed on the right side of the button."},iconLeft:{value:void 0,type:i.B.String,description:"Specifies the name of the icon that should be placed on the left side of the button."},title:{value:"Button",type:i.B.String,description:"Represents the text that will be displayed on the button."},useTintColor:{value:!0,type:i.B.Boolean,description:"If true, the icon of the button will use the tint color provided by its container."},onPress:{value:"() => {}",type:i.B.Function,description:"A callback function that is called when the button is pressed."}},scope:{Button:r.$n},imports:{"@momo-kits/foundation":{named:["Button"]}}});return a.createElement(a.Fragment,null,a.createElement(l.A,{params:e}))}},15963:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var a=n(74892),r=n(97639);const l=function(e){(0,r.A)();var t=e.src,n=e.width,l=void 0===n?300:n,o=e.height,i=void 0===o?300:o;return a.createElement("div",{style:{marginLeft:12,marginBottom:12},className:"row"},a.createElement("img",{src:t,height:i,width:l,alt:"Components's screenshot"}))},o=function(){return a.createElement(a.Fragment,null,[].map((function(e){return a.createElement(l,{src:e})})))}},95412:(e,t,n)=>{"use strict";n.d(t,{A:()=>m});var a=n(58168),r=n(74892),l=n(29813),o=n(91906),i=n(76482),d=n(5789),p=n(5641),s=n(10991),g=n(3533);const m=function(e){var t=e.params;return r.createElement(l.A,{fallback:r.createElement(r.Fragment,null,"Loading...")},(function(){return r.createElement("div",null,r.createElement("div",{style:{border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative",paddingLeft:16,paddingRight:16,fontFamily:"SFProText"}},r.createElement(o.A,(0,a.A)({},t.compilerProps,{minHeight:62,placeholder:i.A}))),r.createElement(d.A,{msg:t.errorProps.msg,isPopup:!0}),r.createElement(p.A,t.knobProps),r.createElement(s.A,t.editorProps),r.createElement(d.A,t.errorProps),r.createElement(g.w,t.actions))}))}},78932:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>h,frontMatter:()=>p,metadata:()=>g,toc:()=>u});var a=n(58168),r=n(98587),l=(n(74892),n(77264)),o=n(17901),i=n(15963),d=["components"],p={id:"button",title:"Button"},s=void 0,g={unversionedId:"docs/components/button",id:"version-0.81.43/docs/components/button",title:"Button",description:"Playground",source:"@site/versioned_docs/version-0.81.43/docs/components/Button.mdx",sourceDirName:"docs/components",slug:"/docs/components/button",permalink:"/docs/0.81.43/docs/components/button",draft:!1,editUrl:"https://github.com/versioned_docs/version-0.81.43/docs/components/Button.mdx",tags:[],version:"0.81.43",frontMatter:{id:"button",title:"Button"},sidebar:"version-0.81.43/docs",previous:{title:"Shadow",permalink:"/docs/0.81.43/docs/shadow"},next:{title:"CheckBox",permalink:"/docs/0.81.43/docs/components/checkbox"}},m={},u=[{value:"Playground",id:"playground",level:2},{value:"Props",id:"props",level:2}],y={toc:u},c="wrapper";function h(e){var t=e.components,n=(0,r.A)(e,d);return(0,l.yg)(c,(0,a.A)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)(i.A,{mdxType:"Screenshot"}),(0,l.yg)("h2",{id:"playground"},"Playground"),(0,l.yg)(o.A,{mdxType:"Play"}),(0,l.yg)("h2",{id:"props"},"Props"),(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"Includes all ",(0,l.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/touchableopacity#props"},"TouchableOpacityProps")," props.")),(0,l.yg)("div",{class:"table-responsive"},(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Name"),(0,l.yg)("th",{parentName:"tr",align:null},"Type"),(0,l.yg)("th",{parentName:"tr",align:null},"Default"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"full")),(0,l.yg)("td",{parentName:"tr",align:null},"boolean"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"true")),(0,l.yg)("td",{parentName:"tr",align:null},"If true, the button will take the full width of its container.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"iconLeft")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"Specifies the name of the icon that should be placed on the left side of the button.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"iconRight")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"Specifies the name of the icon that should be placed on the right side of the button.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"loading")),(0,l.yg)("td",{parentName:"tr",align:null},"boolean"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"false")),(0,l.yg)("td",{parentName:"tr",align:null},"If true, the icon of button will use be show indicator loading.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"onPress")),(0,l.yg)("td",{parentName:"tr",align:null},"Function"),(0,l.yg)("td",{parentName:"tr",align:null}),(0,l.yg)("td",{parentName:"tr",align:null},"A callback function that is called when the button is pressed.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"size")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"small")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"large")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"medium")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"large")),(0,l.yg)("td",{parentName:"tr",align:null},"Defines the size of the button.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"title")),(0,l.yg)("td",{parentName:"tr",align:null},"string"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"Button")),(0,l.yg)("td",{parentName:"tr",align:null},"Represents the text that will be displayed on the button.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"type")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"disabled")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"primary")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"secondary")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"tonal")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"outline")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"danger")," ","|"," ",(0,l.yg)("inlineCode",{parentName:"td"},"text")),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"primary")),(0,l.yg)("td",{parentName:"tr",align:null},"Defines the visual style of the button.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"useTintColor")),(0,l.yg)("td",{parentName:"tr",align:null},"boolean"),(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"true")),(0,l.yg)("td",{parentName:"tr",align:null},"If true, the icon of button will use the tint color provided by its container."))))))}h.isMDXComponent=!0},52352:()=>{},18411:()=>{}}]);