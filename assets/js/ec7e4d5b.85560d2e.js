"use strict";(self.webpackChunkmomo_kits_website=self.webpackChunkmomo_kits_website||[]).push([[24538],{77611:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>y});var n=r(49397);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),a=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=a(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,p=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=a(r),f=o,y=u["".concat(s,".").concat(f)]||u[f]||m[f]||p;return r?n.createElement(y,i(i({ref:t},l),{},{components:r})):n.createElement(y,i({ref:t},l))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=r.length,i=new Array(p);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var a=2;a<p;a++)i[a]=r[a];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},87335:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>y,frontMatter:()=>c,metadata:()=>a,toc:()=>u});var n=r(58168),o=r(98587),p=(r(49397),r(77611)),i=["components"],c={id:"chipprops",title:"ChipProps"},s=void 0,a={unversionedId:"components/chipprops",id:"version-0.110.x/components/chipprops",title:"ChipProps",description:"Props for the Chip component. A Chip is a compact element that represents an input, attribute, or action.",source:"@site/versioned_docs/version-0.110.x/components/ChipProps.mdx",sourceDirName:"components",slug:"/components/chipprops",permalink:"/docs/components/chipprops",draft:!1,editUrl:"https://github.com/versioned_docs/version-0.110.x/components/ChipProps.mdx",tags:[],version:"0.110.x",frontMatter:{id:"chipprops",title:"ChipProps"}},l={},u=[{value:"Props",id:"props",level:2}],m={toc:u},f="wrapper";function y(e){var t=e.components,r=(0,o.A)(e,i);return(0,p.yg)(f,(0,n.A)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,p.yg)("p",null,"Props for the Chip component. A Chip is a compact element that represents an input, attribute, or action."),(0,p.yg)("h2",{id:"props"},"Props"))}y.isMDXComponent=!0}}]);