(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[8538],{54236:(t,e,n)=>{"use strict";n.d(e,{Z:()=>u});var a=n(87462),r=n(51702),o=n(91262),l=n(180),i=n(85405),p=n(3389),d=n(84085),s=n(17099),m=n(25757);const u=function(t){var e=t.params;return r.createElement(o.Z,{fallback:r.createElement(r.Fragment,null,"Loading...")},(function(){return r.createElement("div",null,r.createElement("div",{style:{border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative",paddingLeft:16,paddingRight:16,fontFamily:"SFProText"}},r.createElement(l.Z,(0,a.Z)({},e.compilerProps,{minHeight:62,placeholder:i.Z}))),r.createElement(p.Z,{msg:e.errorProps.msg,isPopup:!0}),r.createElement(d.Z,e.knobProps),r.createElement(s.Z,e.editorProps),r.createElement(p.Z,e.errorProps),r.createElement(m.E,e.actions))}))}},70648:(t,e,n)=>{"use strict";n.r(e),n.d(e,{assets:()=>N,contentTitle:()=>g,default:()=>b,frontMatter:()=>c,metadata:()=>k,toc:()=>h});var a=n(87462),r=n(63366),o=n(51702),l=n(1037),i=n(99092),p=n(54236),d=n(62964),s=n(53782);const m=function(){var t=(0,d.Z)({componentName:"Input",props:{size:{value:"small",type:s.n.Enum,options:{small:"small",large:"large"},description:"Optional. Defines the size of the Input component."},placeholder:{value:"placeholder",type:s.n.String,description:"Optional. Represents the placeholder in the Input component."},floatingValue:{value:void 0,type:s.n.String,description:"Optional. Represents the value for the floating title in the Input component."},floatingIcon:{value:void 0,type:s.n.String,description:"Optional. Represents the name or key of the floating icon to be displayed in the Input component."},errorMessage:{value:void 0,type:s.n.String,description:"Optional. Represents the error message to be displayed below the Input component when there is an error."},icon:{value:void 0,type:s.n.String,description:"Optional. Represents the name or key of the icon to be displayed in the Input component."},disabled:{value:!1,type:s.n.Boolean,description:"Optional. If `true`, the user won't be able to interact with the Input component. Defaults to `false` if not provided."},floatingIconColor:{value:void 0,type:s.n.String,description:"Optional. Represents the color of the floating icon in the Input component."},iconColor:{value:void 0,type:s.n.String,description:"Optional. Represents the color of the icon in the Input component."},required:{value:!1,type:s.n.Boolean,description:"Optional. If `true`, the Input component is marked as required, indicating that the user must provide a value before submitting a form. Defaults to `false` if not provided."},errorSpacing:{value:!1,type:s.n.Boolean,description:"Optional. If `true`, include spacing when Input does not have an error message. Defaults to `false` if not provided."}},scope:{Input:i.II},imports:{"@momo-kits/foundation":{named:["Input"]}}});return o.createElement(o.Fragment,null,o.createElement(p.Z,{params:t}))};var u=["components"],c={id:"input",title:"Input"},g=void 0,k={unversionedId:"components/input",id:"components/input",title:"Input",description:"Playground",source:"@site/docs/components/Input.mdx",sourceDirName:"components",slug:"/components/input",permalink:"/docs/components/input",draft:!1,editUrl:"https://github.com/docs/components/Input.mdx",tags:[],version:"current",frontMatter:{id:"input",title:"Input"},sidebar:"docs",previous:{title:"Image",permalink:"/docs/components/image"},next:{title:"InputMoney",permalink:"/docs/components/inputmoney"}},N={},h=[{value:"Playground",id:"playground",level:2},{value:"Props",id:"props",level:2}],f={toc:h},v="wrapper";function b(t){var e=t.components,n=(0,r.Z)(t,u);return(0,l.kt)(v,(0,a.Z)({},f,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"playground"},"Playground"),(0,l.kt)(m,{mdxType:"Play"}),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Includes all ",(0,l.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/textinput#props"},"React Native TextInput"),", ",(0,l.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/view#props"},"View")," props.")),(0,l.kt)("div",{class:"table-responsive"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"disabled")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. If ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", the user won't be able to interact with the Input component.Defaults to ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"errorMessage")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Represents the error message to be displayed below the Input component when there is an error.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"errorSpacing")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. If ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),",include spacing when Input not have error message.Defaults to ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"floatingIcon")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Represents the name or key of the floating icon to be displayed in the Input component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"floatingIconColor")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Represents the color of the floating icon in the Input component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"floatingValue")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Represents the value for the floating title in the Input component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"icon")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Represents the name or key of the icon to be displayed in the Input component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"iconColor")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Represents the color of the icon in the Input component.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"loading")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"If true, the icon of input will use be show indicator loading.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"required")),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. If ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),", the Input component is marked as required,indicating that the user must provide a value before submitting a form.Defaults to ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"size")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"large")," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},"small")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"small")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional. Defines the size of the Input component."))))))}b.isMDXComponent=!0},33770:()=>{},72950:()=>{},54882:()=>{}}]);